{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chene\\\\Documents\\\\React\\\\Food_Ordering_App\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputReft = useRef();\n  const streetInputReft = useRef();\n  const postalInputReft = useRef();\n  const cityInputReft = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputReft.current.value;\n    const enteredStreet = streetInputReft.current.value;\n    const enteredPostal = postalInputReft.current.value;\n    const enteredCity = cityInputReft.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormIsValid({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      console.log(\"Form is invalid\");\n    }\n\n    if (formIsValid) {\n      props.onConfirmOrder({\n        name: enteredName,\n        street: enteredStreet,\n        postal: enteredPostal,\n        city: enteredCity\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${form}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputReft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), !formIsValid.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputReft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), !formIsValid.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Street is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputReft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !formIsValid.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Postal Code is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputReft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), !formIsValid.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCloseCart,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"n9b++GizA/6TQzyBzvVmBBWh5/Y=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formIsValid","setFormIsValid","name","street","city","postalCode","nameInputReft","streetInputReft","postalInputReft","cityInputReft","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","console","log","onConfirmOrder","postal","form","control","actions","onCloseCart","submit"],"sources":["C:/Users/Chene/Documents/React/Food_Ordering_App/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.length === 5;\r\n\r\nconst Checkout = (props) => {\r\n    const [formIsValid, setFormIsValid] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        postalCode: true\r\n    });\r\n\r\n\r\n  const nameInputReft = useRef();\r\n  const streetInputReft = useRef();\r\n  const postalInputReft = useRef();\r\n  const cityInputReft = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInputReft.current.value;\r\n    const enteredStreet = streetInputReft.current.value;\r\n    const enteredPostal = postalInputReft.current.value;\r\n    const enteredCity = cityInputReft.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n\r\n    setFormIsValid({\r\n        name: enteredNameIsValid,\r\n        street: enteredStreetIsValid,\r\n        city: enteredCityIsValid,\r\n        postalCode: enteredPostalIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredPostalIsValid &&\r\n      enteredCityIsValid;\r\n\r\n      \r\n      if(!formIsValid) {\r\n        console.log(\"Form is invalid\");\r\n      }\r\n      if (formIsValid) {\r\n        props.onConfirmOrder({\r\n          name: enteredName,\r\n          street: enteredStreet,\r\n          postal: enteredPostal,\r\n          city: enteredCity,\r\n        });\r\n      }\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${form}`}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputReft} />\r\n        {!formIsValid.name && <p>Name is required</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputReft} />\r\n        {!formIsValid.street && <p>Street is required</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalInputReft} />\r\n        {!formIsValid.postalCode && <p>Postal Code is required</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputReft} />\r\n        {!formIsValid.city && <p>City is required</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCloseCart}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}